// @import "compass/css3";

* {
    box-sizing: border-box;
}

html,
body {
    background-color: #FEDCC8;
    margin: 0;
    padding: 0;
    // overflow: hidden
}

$imageAspectRatio: 2/3;

.parallax {
    perspective-origin: center;
    perspective: 100px;
    height: 100vh;
    overflow-x: hidden;
    overflow-y: auto;
    position: relative;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    // width: 100%;
    display: flex;


}


.parallax__layer {
    position: absolute;
    display: flex;
    height: 100vh;
    min-height: 100vh;
    width: 100vw;
    min-width: 100vw;
    // top: 0;
    // right: 0;
    // bottom: 0;
    // left: 0;
    justify-content: center;
    img {
        display: block;
        width: 100vw;
        min-width: 500px;
        min-height: #{$imageAspectRatio * 500px};
        height: (#{$imageAspectRatio * 100vw});
    }
}

.parallax__cover {
    background: #2d112b;
    position: relative;
    top: calc(max(100vw, 500px) * #{$imageAspectRatio} * 0.99);
    height: 200vh;
    width: 100vw;
    min-width: 100vw;
    min-height: 200vh;
    z-index: 2;
}

$parallax__layers: 5;

@for $i from 0 through $parallax__layers {

    $parallaxScale: 2;

    $x: (
        $parallax__layers - $i) / 2 * $parallaxScale;


        // $heightDifferenceOneSide: $x / 2;
        $totalOffset: calc((100vh - #{$imageAspectRatio*100vw}) / #{$parallax__layers});

        .parallax__layer__#{$i} {
            transform: translateZ(#{-100px * $x}) scale($x + 1) translateY(#{$totalOffset});
        }

        @if $i ==$parallax__layers {
            .parallax__cover {
                transform: translateZ(#{-100px * $x}) scale($x + 1) translateY(#{$totalOffset});
            }
        }
}